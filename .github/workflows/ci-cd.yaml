name: CI/CD to Minikube with Argo CD

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Extract short SHA
    - name: Set short SHA
      id: vars
      run: echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> "$GITHUB_OUTPUT"

    # Bump patch version
    # - name: Bump version
    #   id: bump
    #   run: |
    #     version=$(cat VERSION)
    #     new_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
    #     echo "new_version=$new_version" >> "$GITHUB_OUTPUT"
    #     echo "$new_version" > VERSION

    # # Commit version bump
    # - name: Commit version bump
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add VERSION
    #     git commit -m "ci: bump version to ${{ steps.bump.outputs.new_version }}"
    #     git push origin main

    # (Optional) Tag the commit with version
    # - name: Tag commit
    #   run: |
    #     git tag v${{ steps.bump.outputs.new_version }}
    #     git push origin v${{ steps.bump.outputs.new_version }}

    # Log in to DockerHub (or your registry)
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push frontend image
    - name: Build & Push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./client
        file: ./client/Dockerfile
        push: true
        tags: gauravchoudhary15/devconnector-frontend:${{ steps.vars.outputs.sha_short }}

    # Build and push backend image
    - name: Build & Push Backend
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: gauravchoudhary15/devconnector-backend:${{ steps.vars.outputs.sha_short }}

    # Update k8s deployment YAML files with new image tags
    - name: Update image tags in YAML
      run: |
        sed -i "s|image: .*/devconnector-frontend:.*|image: gauravchoudhary15/devconnector-frontend:${{ steps.vars.outputs.sha_short }}|g" k8s/base/frontend/deployment.yaml
        sed -i "s|image: .*/devconnector-backend:.*|image: gauravchoudhary15/devconnector-backend:${{ steps.vars.outputs.sha_short }}|g" k8s/base/backend/deployment.yaml

    # Commit updated k8s manifests
    - name: Commit updated YAMLs
      run: |
        git config user.name gauravchoudhary1998
        git config user.email choudharyg015@gmail.com
        git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/gauravchoudhary1998/devConnectorV2.git
        git remote -v
        git add k8s/base/frontend/deployment.yaml k8s/base/backend/deployment.yaml
        git commit -m "ci: update image tags to ${{ steps.vars.outputs.sha_short }}"
        git push origin HEAD:master

    # Trigger Argo CD sync
    - name: Argo CD Deploy
      run: |
        argocd login localhost:8080 --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
        argocd app sync my-app
        argocd app wait my-app
